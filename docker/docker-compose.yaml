version: "3.8"
services:
  init-data:
    image: python:3.11
    volumes:
      - medicaleval:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e  # Stop on error
        echo "Creating dataset directory..."
        mkdir -p /data/medquad && cd /data/medquad

        # run on node-persist
        curl https://rclone.org/install.sh | sudo bash

        sudo sed -i '/^#user_allow_other/s/^#//' /etc/fuse.conf

        mkdir -p ~/.config/rclone

        echo "[chi_tacc]
        type = swift
        user_id = $YOUR_USER_ID
        application_credential_id = $APP_CRED_ID
        application_credential_secret = $APP_CRED_SECRET
        auth = https://chi.tacc.chameleoncloud.org:5000/v3
        region = CHI@TACC" > ~/.config/rclone/rclone.conf

        rclone lsd chi_tacc:

        echo "Setting RCLONE_CONTAINER..."
        export RCLONE_CONTAINER=object-persist-project17

        echo "Mounting on local file system"
        sudo mkdir -p /mnt/object
        sudo chown -R cc /mnt/object
        sudo chgrp -R cc /mnt/object

        rclone mount chi_tacc:object-persist-project17 /mnt/object --allow-other --daemon

        ls /mnt/object
    restart: "no"

  triton_server:
    build:
      context: /home/cc/model-optim
      dockerfile: docker/Dockerfile.triton
    container_name: triton_server

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "8000:8000"  # for HTTP requests
      - "8001:8001"  # for GRPC requests
      - "8002:8002"  # for reporting metrics

  jupyter:
    image: quay.io/jupyter/minimal-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    networks:
      - app-network
    volumes:
      - /home/cc/workspace:/home/jovyan/work:rw
      - /mnt/object:/mnt/object:rw
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              device_ids: ["0"]
    command: >
      bash -c "python3 -m pip install bash_kernel tritonclient[all] && 
               python3 -m bash_kernel.install && start-notebook.sh"


  flask:
    build:
      context: /home/cc/model-optim/flask_app
      dockerfile: Dockerfile
    container_name: flask
    networks:
      - app-network
    ports:
      - "80:5000"
    environment:
      - TRITON_SERVER_URL=triton_server:8000
      - FASTAPI_SERVER_URL=http://fastapi_server:8000


  fastapi_server:
    build:
      context: /home/cc/model-optim/fastapi_pt
      dockerfile: Dockerfile
    container_name: fastapi_server
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "8000:8000"  # for HTTP requests


volumes:
  medicaleval:

networks:
  app-network:

